<project name="JDEECo-Core" default="all" basedir=".">
	<description>JDEECo build file</description>

	<property name="dist" location="."/>
	<property name="src" location="${dist}/../jdeeco-core/src"/>
	<property name="demo" location="${dist}/../jdeeco-demo/src"/>
	<property name="river" location="${dist}/apache-river"/>
	
	<!-- start apache river - individual services -->
	<target name="start-ar-httpd">
		<java fork="true" jar="${river}/lib/classserver.jar" dir="${dist}">
			<arg line="-port 8080 -dir"/>
			<arg path="${river}/lib:${river}/lib-dl"/>
		</java>
	</target>

	<target name="start-ar-jrmp-reggie">
		<java fork="true" jar="${river}/lib/start.jar" dir="${dist}">
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.ext.dirs=${river}/lib-ext"/>
			<arg path="${river}-config/start-reggie.config"/>
		</java>
	</target>

	<target name="start-ar-jrmp-mahalo-group">
		<java fork="true" jar="${river}/lib/start.jar" dir="${dist}">
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<arg path="${river}-config/start-mahalo-group.config"/>
		</java>
	</target>

	<target name="start-ar-jrmp-outrigger-group">
		<java fork="true" jar="${river}/lib/start.jar" dir="${dist}">
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<arg path="${river}-config/start-outrigger-group.config"/>
		</java>
	</target>
	
	<!-- start apache river - main task -->
	<target name="start-ar"
		description="Starts the Apache River">
		<parallel>
			<antcall target="start-ar-httpd"/>
			<antcall target="start-ar-jrmp-reggie"/>
			<antcall target="start-ar-jrmp-outrigger-group"/>
			<antcall target="start-ar-jrmp-mahalo-group"/>
		</parallel>
	</target>
	
	<!-- start cloud demo with local shared memory -->
	<target name="cloud-local" description="Runs the cloud demo">
		<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.LocalLauncherCloudNoJPF" fork="true">
			<classpath>
				<pathelement location="${dist}/cloud.jar"/>
				<pathelement location="${dist}/jdeeco.jar"/>
				<pathelement location="${river}/lib/jsk-lib.jar"/>
				<pathelement location="${river}/lib/jsk-platform.jar"/>
			</classpath>
			<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
			<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
		</java>
	</target>
	
	<!-- start convoy demo with local shared memory -->
		<target name="convoy-local" description="Runs the convoy demo">
			<java classname="cz.cuni.mff.d3s.deeco.demo.convoy.LocalLauncherConvoyNoJPF" fork="true">
				<classpath>
					<pathelement location="${dist}/convoy.jar"/>
					<pathelement location="${dist}/jdeeco.jar"/>
					<pathelement location="${river}/lib/jsk-lib.jar"/>
					<pathelement location="${river}/lib/jsk-platform.jar"/>
				</classpath>
				<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
				<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
			</java>
		</target>
	
	<!-- start cloud demo with tuple spaces as shared memory -->
	<target name="cloud-ts" description="Runs the cloud demo">
		<parallel>
			<antcall target="start-ar"/>
			<java classname="cz.cuni.mff.d3s.deeco.demo.cloud.TSLauncherCloudNoJPF" fork="true">
				<classpath>
					<pathelement location="${dist}/cloud.jar"/>
					<pathelement location="${dist}/jdeeco.jar"/>
					<pathelement location="${river}/lib/jsk-lib.jar"/>
					<pathelement location="${river}/lib/jsk-platform.jar"/>
				</classpath>
				<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
				<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
			</java>
		</parallel>
	</target>
	
	<!-- start convoy demo with tuple spaces as shared memory -->
	<target name="convoy-ts" description="Runs the convoy demo">
		<parallel>
			<antcall target="start-ar"/>
			<java classname="cz.cuni.mff.d3s.deeco.demo.convoy.TSLauncherConvoyNoJPF" fork="true">
				<classpath>
					<pathelement location="${dist}/convoy.jar"/>
					<pathelement location="${dist}/jdeeco.jar"/>
					<pathelement location="${river}/lib/jsk-lib.jar"/>
					<pathelement location="${river}/lib/jsk-platform.jar"/>
				</classpath>
				<jvmarg value="-Djava.security.policy=${river}-config/start.policy"/>
				<jvmarg value="-Djava.rmi.server.RMIClassLoaderSpi=net.jini.loader.pref.PreferredClassProvider"/>
			</java>
		</parallel>
	</target>
	
	
	<!-- Run cloud demo under jpf -->
	<target name="jpf-cloud">
        <antcall target="ant-jdeeco-core"/>
        <ant antfile="build.xml" dir="jdeeco-demo" target="dist-cloud-demo"/>
		<java fork="true" classname="cz.cuni.mff.d3s.deeco.runtime.PreLauncher" dir="${dist}">
			<arg value="cloud.jar"/>
			<classpath>
				<pathelement location="${dist}/jdeeco.jar"/>
			</classpath>
		</java>
		<java fork="true" jar="${jpf}/build/RunJPF.jar" dir="${dist}">
			<jvmarg value="-Djdeeco-dist=${dist}"/>
			<jvmarg value="-Djdeeco-src=${src}"/>
			<jvmarg value="-Djdeeco-src-demo=${demo}"/>
			<arg value="${demo}/../jpfProperties/LocalLauncherCloudJPF.jpf"/>
		</java>
	</target>
	
</project>
